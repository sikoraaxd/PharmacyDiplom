// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PharmacyDiplom;

#nullable disable

namespace PharmacyDiplom.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220529164407_Initial3")]
    partial class Initial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PharmacyDiplom.MVVM.Model.PharmacyItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("ID");

                    b.ToTable("PharmacyItems");
                });

            modelBuilder.Entity("PharmacyDiplom.MVVM.Model.PharmMarket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("PharmMarket");
                });

            modelBuilder.Entity("PharmacyDiplom.MVVM.Model.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PharmMarketPharmacyItem", b =>
                {
                    b.Property<Guid>("PharmMarketsID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PharmacyItemsID")
                        .HasColumnType("uuid");

                    b.HasKey("PharmMarketsID", "PharmacyItemsID");

                    b.HasIndex("PharmacyItemsID");

                    b.ToTable("PharmMarketPharmacyItem");
                });

            modelBuilder.Entity("PharmMarketPharmacyItem", b =>
                {
                    b.HasOne("PharmacyDiplom.MVVM.Model.PharmMarket", null)
                        .WithMany()
                        .HasForeignKey("PharmMarketsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PharmacyDiplom.MVVM.Model.PharmacyItem", null)
                        .WithMany()
                        .HasForeignKey("PharmacyItemsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
